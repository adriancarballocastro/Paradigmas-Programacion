(*x-y;;*)			(*Error por que no está definido x*)
let x=1;;			(*Guarda en x el valor 1*)
(*x-y;;*)			(*Error por que no está definido y*)
let y = 2;;			(*Guarda en y el valor 2*)
x-y;;				(*Resta los valores que se guardan en x y en y*)
(*z;;*)				(*Error por que no hay nada en z*)
let z = x+y;;			(*Guarda en z el valor de la suma de x e y*)
z;;				(*Muestra el número que se guarda en z*)
let y = 5 in x + y;;		(*Suma los dos valores con el nuevo de y sin modificarlo*)
x+y;;				(*Suma x e y*)
let x = x + y in let y= x*y in x + y + z;;		(*Suma los 3 valores con nuevos sin modificalos*)
x+y+z;;				(*Suma los tres valores*)
function x-> 2*x;;		(*Define la función x*)
(function x->2*x)(2+1);;	(*Le pasa a la función x el valor 3 de la suma*)
(function x -> 2*x) 2+1;;	(*Le pasa el valor 1 a la función y después le suma 1*)
let f = function x -> 2*x;;	(*Define la función f*)
f;;				(*Error por no estar definido*)
f(2+1);;			(*Pasa a la función f el número 3 y devuelve 6*)
f 2+1;;				(*Pasa a la función f el número 2 y despues le suma 1*)
f x;;				(*Pasa a la función f el número 1 y devuelve 2*)
let x = 100;;			(*Guarda en x el valor 100*)
f x;;				(*Le pasa el valor de x a la función f y devuelve 200*)
let m= 1000;;			(*Guarda en m el valor 1000*)
let g = function x -> x + m;;	(*Define en g la funcion que suma al valor que se le pasa el número que se almacena en m*)
g;;				(*Indica que la función g recibe un int y devuelve otro*)
g 3;;				(*Devuelve el resultado de la suma de 3 con el valor de m*)
(*g 3.0;;*)			(*Error por que esperaba un int y se le pasa un float*)
let m = 7;;			(*Modifica el valor de m*)
g 3;;				(*Suma 3 al valor antiguo de m*)
let istrue = function true -> true;;		(*Un warming indica que la funcion no es del todo bien definida*)
istrue;;			(*Indica que la función devuelve un bool cuando se le pasa un bool*)
istrue (1<2);;			(*Devuelve true*)
istrue (2>1);;			(*Devuelve true*)
(*istrue 0;;*)			(*Error por que esperaba un bool*)
let iscero_v1 = function 0 -> true;;		(*Un warming indica que la funcion no es del todo bien definida*)	
iscero_v1 0;;			(*La función iscero devuelve true por que se le paso un cero*)
(*iscero_v1 0.;;*)			(*Error por que la función esperaba un int en vez de un float*)
(*iscero_v1 1;;*)		(*Salta una excepción*)		
let iscero_v2 = function 0 -> true | _->false;;		(*Define la función para recibir int y devolver bool*)
iscero_v2 0;;			(*Devuelve true*)
iscero_v2 1;;			(*Devuelve false*)
(*iscero_v2 0.;;*)		(*Error por que esperaba un int en vez de un float*)
let all_to_true = function true -> true | false -> true;;	(*Define la función para que siempre que se le pase un bool devuelva true*)
all_to_true (1<2);;		(*Devuelve true*)
all_to_true (1>2);;		(*Devuelve true*)
(*all_to_true 0;;*)		(*Error por que esperaba un bool*)
let first_all_to_true = all_to_true;;			(*Define la función first_all_to_true *)
let all_to_true = function x->true;;			(*Independientemente del valor que se le pase devuelve true*)
all_to_true (1<2);;		(*Devuelve true*)
all_to_true (1>2);;		(*Devuelve true*)
all_to_true 0;;			(*Devuelve true*)
(*first_all_to_true 0;;*)	(*Error por que esperaba un bool en vez de un int*)		
