let p = (1 + 1, asin 1.), true;; 		(*Guarda en la matriz p el valor de la operacion y true*)
let(x,y),z=p;; 					(*Guarda el valor de la operacion en entero y en flotante y el valor true*)
let p1,p2 = p in let p11, _ = p1 in (p2, 2*p11);;	(*Intercambia los valores de p multiplicando el entero de uno de ellos*)
let f(x,y) = 2 * x + y;;			(*Recibe dos valores y los opera*)
let f2 x y z = x (y,z);;			(*Cambia el formato de los números*)
let g x y z = x (y,z);;				(*Cambia el formato de los números*)
g fst 1 "hola";;				(*Hace fst sin tener que usar parentesis*)
g snd fst true;;				(*Hace snd sin tener que usar parentesis*)
g f 2 3;;					(*Hace f sin tener que usar parentesis*)
g (function (f,x) -> f (f x)) (function x -> x * x) 3;;		(*A la función se le pasa dos funciones como argumentos *)
let x, y, z = 1, 2, 3;;				(*Asigna valores*)
(*x y z;;*)					(*Error de tipos*)
(*let x,y,z = y, z, x in f2 x y z;;*)		(*Error de tipos*)
(*f2 x y z;;*)					(*Error de tipos*)
let swap (x,y) = y,x;;				(*Intercambia los valores que se le pasan*)
let p = 1,2;;					(*Asigna valores*)
f p;;						(*Pasa esos valores a la función f*)
let p = swap p in f p;;				(*Intercambia solo aqui los valores y se los pasa a f*)
f p;;						(*Pasa los valores originales a la funcion f*)

