();;			(*Devuelve el valor unit*)
2 + 5 * 3;;		(*Devuelve el resultado de la operación del tipo int*)
1.25 *. 2.0;;		(*Devuelve el resultado de la operación del tipo float*)
(*2 - 2.0*)		(*Devuelve un error por ser valores de diferentes tipos*)
(*3.0 + 2.0*)		(*Devuelve un error por que los operandos y la expresión son de tipos diferentes*)
5/3;;			(*Devuelve la división entera*)
5 mod 3;;			(*Devuelve el resto de la divisón*)
2.0 *. 3.0 ** 2.0;;	(*Multiplica por dos 3 elevado a 2*)
2.0 ** 3.0 ** 2.0;;	(*Eleva 2 a 9*)
sqrt;;			(*Indica que hay que darle y que devuelve la función*)
(*sqrt 4*)		(*Devuelve un error por que esperaba un dato tipo float*)
int_of_float;;		(*Indica que hay que pasarle y que devuelve*)
float_of_int;;		(*Indica que hay que pasarle y que devuelve*)	
3.0 = float_of_int 3;;	(*Compara si el valor flotamte de 3.0 es igual a valor de 3 pasado a float, devuelve un bool true*)
(*int_of_float -2.9*)	(*Devulve un error por que esperaba otro tipo de datos*)
int_of_float 2.1 + truncate (-2.9);;  (*Devuelve un la suma de 2 y -2*)
truncate;;		(*Indica que recive un float y lo pasa a int*)
truncate 2.1 + truncate(-2.9);;		(*Devuelve la suma de 2 y -2*)
floor;;			(*Recive un float y devuelve otro*)
(*floor 2.1 + floor (-2.9)*) 		(*Error por esperar otro tipo de dato*)
ceil;;			(*Recive un float y devuelve otro*)
ceil 2.1 +. ceil(-2.9);;	(*Aproxima los valores a un float y los suma*
int_of_char;;		(*Recive un char y devuelve un char*)
int_of_char 'A';;		*Devuelve el valor ascii del char que le pasan*
char_of_int;;		*Recive un int y devuelve un char*)
char_of_int 66;;		(*Devuelve el valor ASCII de del número que recive*)
Char.code;;		(*Devuelve un int tras recivir un char*)
Char.code 'B';;		(*Devuelve el valor ascii del char que le pasan*)
Char.chr;;		(*Devuelve un char tras recivir un int*)
Char.chr 67;;		(*Devuelve el valor ascii del int que le pasan*)
'\067';;			(*Devuelve el valor ascii del int que le pasan*)
Char.chr (Char.code 'a' -Char.code 'A' + Char.code 'M');;		(*Pasa las letras a números los opera y lo pasa a letra*)
Char.lowercase_ascii;;	(*Recive un char y devuelve otro*)
Char.lowercase_ascii 'M';; (*Pasa a minuscula el char*)
Char.uppercase_ascii;;	(*Recive un char y devuelve otro*)
Char.uppercase_ascii 'm';; 	(*Pasa a mayuscula el char*)
"this is a string";;	(*Imprime el string*)
String.length;;		(*Recive un string y devuelve un int*)
String.length "longitud";;	(*Devuelve la longitud del string*)
(*"1999" + "1"*)		(*Error por que la función esperaba un int en vez de un string*)
"1999" ^ "1";;		(*Junta los dos string*)
int_of_string;;		(*Recive un string y devuelve un int*)
int_of_string "1999" + 1 ;;	(*Pasa el string a valor numérico y lo suma*)
"\065\066";;		(*Pasa ambos valores a char*)
string_of_int;;		(*Recive un int y lo pasa a string*)
string_of_int 010;;	(*Pasa el string a valor numérico*)
not true;;		(*Devuelve el booleano false*)
true || false;;		(*Devuelve el booleano true*)
(1 < 2) = false	;;	(*Devuelve el booleano false*)
"1" < "2";;		(*Devuelve el booleano true*)
2 < 12;;			(*Devuelve el booleano true*)
"2" < "12";;		(*Devuelve el booleano false*)
"uno" < "dos";;		(*Devuelve el booleano false*)
(*if 3 = 4 then 0 else 4*)	(*Devuelve 4 por que no se verifica la igualdad*)
(*if 3 = 4 then "0" else "4"*)		(*Error de sintaxis*)
(*if 3 = 4 then 0 else "4"*)	(*Error por que la esperaba un int en vez de un string*)
(*if 3 < 5 then 8 else 10) + 4*)		(*Devuelve 12 por que verifica la desigualdad y suma 4*)





